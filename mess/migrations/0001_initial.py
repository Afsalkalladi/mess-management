# Generated by Django 5.0.1 on 2025-08-18 06:44

import django.core.validators
import django.db.models.deletion
import secrets
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tz', models.CharField(default='Asia/Kolkata', max_length=50)),
                ('cutoff_time', models.TimeField(default='23:00')),
                ('qr_secret_version', models.IntegerField(default=1)),
                ('qr_secret_hash', models.CharField(max_length=64)),
                ('meals', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'settings',
            },
        ),
        migrations.CreateModel(
            name='StaffToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('token_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staff_tokens',
                'ordering': ['-issued_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor_type', models.CharField(choices=[('STUDENT', 'Student'), ('ADMIN', 'Admin'), ('STAFF', 'Staff'), ('SYSTEM', 'System')], max_length=10)),
                ('actor_id', models.CharField(blank=True, max_length=50)),
                ('event_type', models.CharField(db_index=True, max_length=100)),
                ('payload', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['actor_type', 'created_at'], name='audit_logs_actor_t_b4d6a4_idx'), models.Index(fields=['event_type', 'created_at'], name='audit_logs_event_t_1d94d4_idx')],
            },
        ),
        migrations.CreateModel(
            name='DLQLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(max_length=100)),
                ('payload', models.JSONField()),
                ('error_message', models.TextField()),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_retry_at', models.DateTimeField(blank=True, null=True)),
                ('resolved', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'dlq_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['resolved', 'created_at'], name='dlq_logs_resolve_d75689_idx')],
            },
        ),
        migrations.CreateModel(
            name='MessClosure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(db_index=True)),
                ('to_date', models.DateField(db_index=True)),
                ('reason', models.TextField(blank=True)),
                ('created_by_admin_id', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mess_closures',
                'ordering': ['-from_date'],
                'indexes': [models.Index(fields=['from_date', 'to_date'], name='mess_closur_from_da_151c53_idx')],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_user_id', models.BigIntegerField(db_index=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('roll_no', models.CharField(db_index=True, max_length=20, unique=True)),
                ('room_no', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('DENIED', 'Denied')], db_index=True, default='PENDING', max_length=10)),
                ('qr_version', models.IntegerField(default=1)),
                ('qr_nonce', models.CharField(default=secrets.token_hex, max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'students',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='students_status_c4f5d2_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScanEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal', models.CharField(choices=[('BREAKFAST', 'Breakfast'), ('LUNCH', 'Lunch'), ('DINNER', 'Dinner')], max_length=10)),
                ('scanned_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('result', models.CharField(choices=[('ALLOWED', 'Allowed'), ('BLOCKED_NO_PAYMENT', 'Blocked - No Payment'), ('BLOCKED_CUT', 'Blocked - Mess Cut'), ('BLOCKED_STATUS', 'Blocked - Status'), ('BLOCKED_CLOSURE', 'Blocked - Mess Closure')], max_length=30)),
                ('device_info', models.TextField(blank=True)),
                ('staff_token_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mess.stafftoken')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scan_events', to='mess.student')),
            ],
            options={
                'db_table': 'scan_events',
                'ordering': ['-scanned_at'],
                'indexes': [models.Index(fields=['student', 'scanned_at'], name='scan_events_student_4335aa_idx'), models.Index(fields=['scanned_at', 'meal'], name='scan_events_scanned_bbcd82_idx')],
                'unique_together': {('student', 'meal', 'scanned_at')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_start', models.DateField()),
                ('cycle_end', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('screenshot_url', models.URLField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('NONE', 'None'), ('UPLOADED', 'Uploaded'), ('VERIFIED', 'Verified'), ('DENIED', 'Denied')], db_index=True, default='NONE', max_length=10)),
                ('source', models.CharField(choices=[('ONLINE_SCREENSHOT', 'Online Screenshot'), ('OFFLINE_MANUAL', 'Offline Manual')], default='ONLINE_SCREENSHOT', max_length=20)),
                ('reviewer_admin_id', models.BigIntegerField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='mess.student')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['student', 'cycle_start', 'status'], name='payments_student_06dcde_idx'), models.Index(fields=['status', 'created_at'], name='payments_status_426d4f_idx')],
            },
        ),
        migrations.CreateModel(
            name='MessCut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(db_index=True)),
                ('to_date', models.DateField(db_index=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('applied_by', models.CharField(choices=[('STUDENT', 'Student'), ('ADMIN_SYSTEM', 'Admin System')], default='STUDENT', max_length=20)),
                ('cutoff_ok', models.BooleanField(default=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mess_cuts', to='mess.student')),
            ],
            options={
                'db_table': 'mess_cuts',
                'ordering': ['-from_date'],
                'indexes': [models.Index(fields=['student', 'from_date', 'to_date'], name='mess_cuts_student_aed2ee_idx'), models.Index(fields=['from_date', 'to_date'], name='mess_cuts_from_da_b2ba5d_idx')],
            },
        ),
    ]
